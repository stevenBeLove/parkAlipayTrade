<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qt.sales.dao.CustomerMapper" >
  <resultMap id="BaseResultMap" type="com.qt.sales.model.Customer" >
    <id column="CUSTOMERID" property="customerid" jdbcType="VARCHAR" />
    <result column="MOBILE" property="mobile" jdbcType="VARCHAR" />
    <result column="AGENCY_ID" property="agencyId" jdbcType="VARCHAR" />
    <result column="AGENCY_NAME" property="agencyName" jdbcType="VARCHAR" />
    <result column="CUSTOMERREGDATE" property="customerregdate" jdbcType="VARCHAR" />
    <result column="PARENT_CUSTOMERID" property="parentCustomerid" jdbcType="VARCHAR" />
    <result column="PARENT_MOBILE" property="parentMobile" jdbcType="VARCHAR" />
    <result column="TWO_CUSTOMERID" property="twoCustomerid" jdbcType="VARCHAR" />
    <result column="TWO_MOBILE" property="twoMobile" jdbcType="VARCHAR" />
    <result column="TOP_CUSTOMERID" property="topCustomerid" jdbcType="VARCHAR" />
    <result column="TOP_MOBILE" property="topMobile" jdbcType="VARCHAR" />
    <result column="TERMID" property="payTerminalId" jdbcType="VARCHAR" />
    <result column="USERNAME" property="customerName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    CUSTOMERID, MOBILE, AGENCY_ID, AGENCY_NAME, CUSTOMERREGDATE, PARENT_CUSTOMERID, PARENT_MOBILE, 
    TWO_CUSTOMERID, TWO_MOBILE, TOP_CUSTOMERID, TOP_MOBILE
  </sql>
  
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qt.sales.model.CustomerExample" >
   select * from ( select tmp_page.*, rownum row_id from ( 
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from TB_FANS_CUSTOMER
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    ) tmp_page where rownum <![CDATA[ <= ${end} ]]>  ) where row_id <![CDATA[  > ${start} ]]>
  </select>
  
  
  <select id="selectByCustomerExample" resultMap="BaseResultMap" parameterType="map" >
  	select * from ( select tmp_page.*, rownum row_id from ( 
  	WITH TB AS 
	(SELECT  T1.TERMID,T1.CUSTOMERID  FROM QTPAY.PAYTERMINAL T1
	INNER JOIN (SELECT  CUSTOMERID,TERMID,MAX(OPENDATE) OPENDATE FROM QTPAY.PAYTERMINAL GROUP BY CUSTOMERID,TERMID) T2 
	ON T1.CUSTOMERID=T2.CUSTOMERID AND T1.OPENDATE=T2.OPENDATE AND T1.TERMID=T2.TERMID
	UNION ALL
	SELECT  TERMID,CUSTOMERID FROM QTFANS.TB_FANS_PAYTERMINAL) 
	SELECT FCUS.AGENCY_NAME,FCUS.CUSTOMERID, TB.TERMID, PCUS.USERNAME, FCUS.MOBILE FROM TB_FANS_CUSTOMER FCUS 
	LEFT JOIN PAYCUSTOMER PCUS ON PCUS.CUSTOMERID = FCUS.CUSTOMERID 
	LEFT JOIN TB ON TB.CUSTOMERID =  FCUS.CUSTOMERID 
	WHERE 1=1
	 <if test="customerid != null" >
        AND FCUS.CUSTOMERID = #{customerid,jdbcType=VARCHAR}
     </if>
     <if test="mobile != null" >
        AND FCUS.MOBILE  = #{mobile,jdbcType=VARCHAR}
     </if>
     <if test="username != null" >
     	AND  PCUS.USERNAME  = #{username,jdbcType=VARCHAR}
     </if>
     <if test="termid != null" >
     	AND  TB.TERMID  =  #{termid,jdbcType=VARCHAR}
     </if>
	) tmp_page where rownum <![CDATA[ <= ${end} ]]>  ) where row_id <![CDATA[  > ${start} ]]>
  </select>
  
    
  <select id="countByCustomerExample" resultType="java.lang.Integer" parameterType="map" >
  	select count(*) from (
  	WITH TB AS 
	(SELECT  T1.TERMID,T1.CUSTOMERID  FROM QTPAY.PAYTERMINAL T1
	INNER JOIN (SELECT  CUSTOMERID,TERMID,MAX(OPENDATE) OPENDATE FROM QTPAY.PAYTERMINAL GROUP BY CUSTOMERID,TERMID) T2 
	ON T1.CUSTOMERID=T2.CUSTOMERID AND T1.OPENDATE=T2.OPENDATE AND T1.TERMID=T2.TERMID
	UNION ALL
	SELECT  TERMID,CUSTOMERID FROM QTFANS.TB_FANS_PAYTERMINAL) 
	SELECT TB.TERMID, FCUS.CUSTOMERID, PCUS.USERNAME, FCUS.MOBILE FROM TB_FANS_CUSTOMER FCUS
	LEFT JOIN PAYCUSTOMER PCUS ON PCUS.CUSTOMERID = FCUS.CUSTOMERID 
	LEFT JOIN TB ON TB.CUSTOMERID =  FCUS.CUSTOMERID 
	WHERE 1=1
	 <if test="customerid != null" >
        AND FCUS.CUSTOMERID = #{customerid,jdbcType=VARCHAR}
     </if>
     <if test="mobile != null" >
        AND FCUS.MOBILE  = #{mobile,jdbcType=VARCHAR}
     </if>
     <if test="username != null" >
     	AND  PCUS.USERNAME  = #{username,jdbcType=VARCHAR}
     </if>
     <if test="termid != null" >
     	AND  TB.TERMID  =  #{termid,jdbcType=VARCHAR}
     </if>
     )
  </select>
  
  <select id="selectCustoemrByPrimaryKeyResult"  parameterType="java.lang.String" resultMap="BaseResultMap">
     WITH TB AS 
	(SELECT  T1.TERMID,T1.CUSTOMERID  FROM QTPAY.PAYTERMINAL T1
	INNER JOIN (SELECT  CUSTOMERID,TERMID,MAX(OPENDATE) OPENDATE FROM QTPAY.PAYTERMINAL GROUP BY CUSTOMERID,TERMID) T2 
	ON T1.CUSTOMERID=T2.CUSTOMERID AND T1.OPENDATE=T2.OPENDATE AND T1.TERMID=T2.TERMID
	UNION ALL
	SELECT  TERMID,CUSTOMERID FROM QTFANS.TB_FANS_PAYTERMINAL) 
	SELECT C.customerid, PCUS.USERNAME customerName, C.mobile, C.customerregdate, C.AGENCY_NAME agencyName,  TB.TERMID payTerminalId, C.PARENT_CUSTOMERID parentCustomerid,
    C.PARENT_MOBILE parentMobile, C.TWO_CUSTOMERID twoCustomerid,C.TWO_MOBILE twoMobile, C.TOP_CUSTOMERID topCustomerid, C.TOP_MOBILE topMobile
    FROM TB_FANS_CUSTOMER C
	LEFT JOIN PAYCUSTOMER PCUS ON PCUS.CUSTOMERID = C.CUSTOMERID 
	LEFT JOIN TB ON TB.CUSTOMERID =  C.CUSTOMERID 
	WHERE C.CUSTOMERID = #{customerid,jdbcType=VARCHAR}
  </select>
  
  
    <select id="selectCustoemrByPrimaryKey"  parameterType="com.qt.sales.model.Customer" resultType="com.qt.sales.model.Customer">
     WITH TB AS 
	(SELECT  T1.TERMID,T1.CUSTOMERID  FROM QTPAY.PAYTERMINAL T1
	INNER JOIN (SELECT  CUSTOMERID,TERMID,MAX(OPENDATE) OPENDATE FROM QTPAY.PAYTERMINAL GROUP BY CUSTOMERID,TERMID) T2 
	ON T1.CUSTOMERID=T2.CUSTOMERID AND T1.OPENDATE=T2.OPENDATE AND T1.TERMID=T2.TERMID
	UNION ALL
	SELECT  TERMID,CUSTOMERID FROM QTFANS.TB_FANS_PAYTERMINAL) 
	SELECT C.customerid, PCUS.USERNAME customerName, C.mobile, C.customerregdate, C.AGENCY_NAME agencyName,  TB.TERMID payTerminalId, C.PARENT_CUSTOMERID parentCustomerid,
    C.PARENT_MOBILE parentMobile, C.TWO_CUSTOMERID twoCustomerid,C.TWO_MOBILE twoMobile, C.TOP_CUSTOMERID topCustomerid, C.TOP_MOBILE topMobile
    FROM TB_FANS_CUSTOMER C
	LEFT JOIN PAYCUSTOMER PCUS ON PCUS.CUSTOMERID = C.CUSTOMERID 
	LEFT JOIN TB ON TB.CUSTOMERID =  C.CUSTOMERID 
	WHERE C.CUSTOMERID = #{customerid,jdbcType=VARCHAR} and  TB.TERMID = #{payTerminalId,jdbcType=VARCHAR}
  </select>
  
  
    <select id="selectCustoemrByPrimaryKeyById"  parameterType="java.lang.String" resultType="com.qt.sales.model.Customer">
     WITH TB AS 
	(SELECT  T1.TERMID,T1.CUSTOMERID  FROM QTPAY.PAYTERMINAL T1
	INNER JOIN (SELECT  CUSTOMERID,TERMID,MAX(OPENDATE) OPENDATE FROM QTPAY.PAYTERMINAL GROUP BY CUSTOMERID,TERMID) T2 
	ON T1.CUSTOMERID=T2.CUSTOMERID AND T1.OPENDATE=T2.OPENDATE AND T1.TERMID=T2.TERMID
	UNION ALL
	SELECT  TERMID,CUSTOMERID FROM QTFANS.TB_FANS_PAYTERMINAL) 
	SELECT C.customerid, PCUS.USERNAME customerName, C.mobile, C.customerregdate, C.AGENCY_NAME agencyName,  TB.TERMID payTerminalId, C.PARENT_CUSTOMERID parentCustomerid,
    C.PARENT_MOBILE parentMobile, C.TWO_CUSTOMERID twoCustomerid,C.TWO_MOBILE twoMobile, C.TOP_CUSTOMERID topCustomerid, C.TOP_MOBILE topMobile
    FROM TB_FANS_CUSTOMER C
	LEFT JOIN PAYCUSTOMER PCUS ON PCUS.CUSTOMERID = C.CUSTOMERID 
	LEFT JOIN TB ON TB.CUSTOMERID =  C.CUSTOMERID 
	WHERE C.CUSTOMERID = #{customerid,jdbcType=VARCHAR} 
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from TB_FANS_CUSTOMER
    where CUSTOMERID = #{customerid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from TB_FANS_CUSTOMER
    where CUSTOMERID = #{customerid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.qt.sales.model.CustomerExample" >
    delete from TB_FANS_CUSTOMER
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qt.sales.model.Customer" >
    insert into TB_FANS_CUSTOMER (CUSTOMERID, MOBILE, AGENCY_ID, 
      AGENCY_NAME, CUSTOMERREGDATE, PARENT_CUSTOMERID, 
      PARENT_MOBILE, TWO_CUSTOMERID, TWO_MOBILE, 
      TOP_CUSTOMERID, TOP_MOBILE)
    values (#{customerid,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{agencyId,jdbcType=VARCHAR}, 
      #{agencyName,jdbcType=VARCHAR}, #{customerregdate,jdbcType=VARCHAR}, #{parentCustomerid,jdbcType=VARCHAR}, 
      #{parentMobile,jdbcType=VARCHAR}, #{twoCustomerid,jdbcType=VARCHAR}, #{twoMobile,jdbcType=VARCHAR}, 
      #{topCustomerid,jdbcType=VARCHAR}, #{topMobile,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qt.sales.model.Customer" >
    insert into TB_FANS_CUSTOMER
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="customerid != null" >
        CUSTOMERID,
      </if>
      <if test="mobile != null" >
        MOBILE,
      </if>
      <if test="agencyId != null" >
        AGENCY_ID,
      </if>
      <if test="agencyName != null" >
        AGENCY_NAME,
      </if>
      <if test="customerregdate != null" >
        CUSTOMERREGDATE,
      </if>
      <if test="parentCustomerid != null" >
        PARENT_CUSTOMERID,
      </if>
      <if test="parentMobile != null" >
        PARENT_MOBILE,
      </if>
      <if test="twoCustomerid != null" >
        TWO_CUSTOMERID,
      </if>
      <if test="twoMobile != null" >
        TWO_MOBILE,
      </if>
      <if test="topCustomerid != null" >
        TOP_CUSTOMERID,
      </if>
      <if test="topMobile != null" >
        TOP_MOBILE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="customerid != null" >
        #{customerid,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="agencyId != null" >
        #{agencyId,jdbcType=VARCHAR},
      </if>
      <if test="agencyName != null" >
        #{agencyName,jdbcType=VARCHAR},
      </if>
      <if test="customerregdate != null" >
        #{customerregdate,jdbcType=VARCHAR},
      </if>
      <if test="parentCustomerid != null" >
        #{parentCustomerid,jdbcType=VARCHAR},
      </if>
      <if test="parentMobile != null" >
        #{parentMobile,jdbcType=VARCHAR},
      </if>
      <if test="twoCustomerid != null" >
        #{twoCustomerid,jdbcType=VARCHAR},
      </if>
      <if test="twoMobile != null" >
        #{twoMobile,jdbcType=VARCHAR},
      </if>
      <if test="topCustomerid != null" >
        #{topCustomerid,jdbcType=VARCHAR},
      </if>
      <if test="topMobile != null" >
        #{topMobile,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qt.sales.model.CustomerExample" resultType="java.lang.Integer" >
    select count(*) from TB_FANS_CUSTOMER
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update TB_FANS_CUSTOMER
    <set >
      <if test="record.customerid != null" >
        CUSTOMERID = #{record.customerid,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null" >
        MOBILE = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.agencyId != null" >
        AGENCY_ID = #{record.agencyId,jdbcType=VARCHAR},
      </if>
      <if test="record.agencyName != null" >
        AGENCY_NAME = #{record.agencyName,jdbcType=VARCHAR},
      </if>
      <if test="record.customerregdate != null" >
        CUSTOMERREGDATE = #{record.customerregdate,jdbcType=VARCHAR},
      </if>
      <if test="record.parentCustomerid != null" >
        PARENT_CUSTOMERID = #{record.parentCustomerid,jdbcType=VARCHAR},
      </if>
      <if test="record.parentMobile != null" >
        PARENT_MOBILE = #{record.parentMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.twoCustomerid != null" >
        TWO_CUSTOMERID = #{record.twoCustomerid,jdbcType=VARCHAR},
      </if>
      <if test="record.twoMobile != null" >
        TWO_MOBILE = #{record.twoMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.topCustomerid != null" >
        TOP_CUSTOMERID = #{record.topCustomerid,jdbcType=VARCHAR},
      </if>
      <if test="record.topMobile != null" >
        TOP_MOBILE = #{record.topMobile,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update TB_FANS_CUSTOMER
    set CUSTOMERID = #{record.customerid,jdbcType=VARCHAR},
      MOBILE = #{record.mobile,jdbcType=VARCHAR},
      AGENCY_ID = #{record.agencyId,jdbcType=VARCHAR},
      AGENCY_NAME = #{record.agencyName,jdbcType=VARCHAR},
      CUSTOMERREGDATE = #{record.customerregdate,jdbcType=VARCHAR},
      PARENT_CUSTOMERID = #{record.parentCustomerid,jdbcType=VARCHAR},
      PARENT_MOBILE = #{record.parentMobile,jdbcType=VARCHAR},
      TWO_CUSTOMERID = #{record.twoCustomerid,jdbcType=VARCHAR},
      TWO_MOBILE = #{record.twoMobile,jdbcType=VARCHAR},
      TOP_CUSTOMERID = #{record.topCustomerid,jdbcType=VARCHAR},
      TOP_MOBILE = #{record.topMobile,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qt.sales.model.Customer" >
    update TB_FANS_CUSTOMER
    <set >
      <if test="mobile != null" >
        MOBILE = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="agencyId != null" >
        AGENCY_ID = #{agencyId,jdbcType=VARCHAR},
      </if>
      <if test="agencyName != null" >
        AGENCY_NAME = #{agencyName,jdbcType=VARCHAR},
      </if>
      <if test="customerregdate != null" >
        CUSTOMERREGDATE = #{customerregdate,jdbcType=VARCHAR},
      </if>
      <if test="parentCustomerid != null" >
        PARENT_CUSTOMERID = #{parentCustomerid,jdbcType=VARCHAR},
      </if>
      <if test="parentMobile != null" >
        PARENT_MOBILE = #{parentMobile,jdbcType=VARCHAR},
      </if>
      <if test="twoCustomerid != null" >
        TWO_CUSTOMERID = #{twoCustomerid,jdbcType=VARCHAR},
      </if>
      <if test="twoMobile != null" >
        TWO_MOBILE = #{twoMobile,jdbcType=VARCHAR},
      </if>
      <if test="topCustomerid != null" >
        TOP_CUSTOMERID = #{topCustomerid,jdbcType=VARCHAR},
      </if>
      <if test="topMobile != null" >
        TOP_MOBILE = #{topMobile,jdbcType=VARCHAR},
      </if>
    </set>
    where CUSTOMERID = #{customerid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qt.sales.model.Customer" >
    update TB_FANS_CUSTOMER
    set MOBILE = #{mobile,jdbcType=VARCHAR},
      AGENCY_ID = #{agencyId,jdbcType=VARCHAR},
      AGENCY_NAME = #{agencyName,jdbcType=VARCHAR},
      CUSTOMERREGDATE = #{customerregdate,jdbcType=VARCHAR},
      PARENT_CUSTOMERID = #{parentCustomerid,jdbcType=VARCHAR},
      PARENT_MOBILE = #{parentMobile,jdbcType=VARCHAR},
      TWO_CUSTOMERID = #{twoCustomerid,jdbcType=VARCHAR},
      TWO_MOBILE = #{twoMobile,jdbcType=VARCHAR},
      TOP_CUSTOMERID = #{topCustomerid,jdbcType=VARCHAR},
      TOP_MOBILE = #{topMobile,jdbcType=VARCHAR}
    where CUSTOMERID = #{customerid,jdbcType=VARCHAR}
  </update>
</mapper>